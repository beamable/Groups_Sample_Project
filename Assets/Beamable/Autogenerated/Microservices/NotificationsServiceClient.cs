//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Beamable.Server.Clients
{
    using System;
    using Beamable.Platform.SDK;
    using Beamable.Server;
    
    
    /// <summary> A generated client for <see cref="Beamable.Microservices.NotificationsService"/> </summary
    public sealed class NotificationsServiceClient : MicroserviceClient, Beamable.Common.IHaveServiceName
    {
        
        public NotificationsServiceClient(BeamContext context = null) : 
                base(context)
        {
        }
        
        public string ServiceName
        {
            get
            {
                return "NotificationsService";
            }
        }
        
        /// <summary>
        /// Call the SendNotification method on the NotificationsService microservice
        /// <see cref="Beamable.Microservices.NotificationsService.SendNotification"/>
        /// </summary>
        public Beamable.Common.Promise<Beamable.Common.Utils.Response<bool>> SendNotification(long fromGamerTag, string toPlayerAvatarName)
        {
            object raw_fromGamerTag = fromGamerTag;
            object raw_toPlayerAvatarName = toPlayerAvatarName;
            System.Collections.Generic.Dictionary<string, object> serializedFields = new System.Collections.Generic.Dictionary<string, object>();
            serializedFields.Add("fromGamerTag", raw_fromGamerTag);
            serializedFields.Add("toPlayerAvatarName", raw_toPlayerAvatarName);
            return this.Request<Beamable.Common.Utils.Response<bool>>("NotificationsService", "SendNotification", serializedFields);
        }
        
        /// <summary>
        /// Call the SetPlayerFcmToken method on the NotificationsService microservice
        /// <see cref="Beamable.Microservices.NotificationsService.SetPlayerFcmToken"/>
        /// </summary>
        public Beamable.Common.Promise<Beamable.Common.Utils.Response<bool>> SetPlayerFcmToken(long gamerTag, string fcmToken)
        {
            object raw_gamerTag = gamerTag;
            object raw_fcmToken = fcmToken;
            System.Collections.Generic.Dictionary<string, object> serializedFields = new System.Collections.Generic.Dictionary<string, object>();
            serializedFields.Add("gamerTag", raw_gamerTag);
            serializedFields.Add("fcmToken", raw_fcmToken);
            return this.Request<Beamable.Common.Utils.Response<bool>>("NotificationsService", "SetPlayerFcmToken", serializedFields);
        }
    }
    
    internal sealed class MicroserviceParametersNotificationsServiceClient
    {
        
        [System.SerializableAttribute()]
        internal sealed class ParameterSystem_Int64 : MicroserviceClientDataWrapper<long>
        {
        }
        
        [System.SerializableAttribute()]
        internal sealed class ParameterSystem_String : MicroserviceClientDataWrapper<string>
        {
        }
    }
    
    [BeamContextSystemAttribute()]
    public static class ExtensionsForNotificationsServiceClient
    {
        
        [Beamable.Common.Dependencies.RegisterBeamableDependenciesAttribute()]
        public static void RegisterService(Beamable.Common.Dependencies.IDependencyBuilder builder)
        {
            builder.AddScoped<NotificationsServiceClient>();
        }
        
        public static NotificationsServiceClient NotificationsService(this Beamable.Server.MicroserviceClients clients)
        {
            return clients.GetClient<NotificationsServiceClient>();
        }
    }
}
