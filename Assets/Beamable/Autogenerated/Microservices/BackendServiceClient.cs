//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Beamable.Server.Clients
{
    using System;
    using Beamable.Platform.SDK;
    using Beamable.Server;
    
    
    /// <summary> A generated client for <see cref="Beamable.Microservices.BackendService"/> </summary
    public sealed class BackendServiceClient : MicroserviceClient, Beamable.Common.IHaveServiceName
    {
        
        public BackendServiceClient(BeamContext context = null) : 
                base(context)
        {
        }
        
        public string ServiceName
        {
            get
            {
                return "BackendService";
            }
        }
        
        /// <summary>
        /// Call the JoinRoom method on the BackendService microservice
        /// <see cref="Beamable.Microservices.BackendService.JoinRoom"/>
        /// </summary>
        public Beamable.Common.Promise<Beamable.Common.Utils.Response<bool>> JoinRoom(long gamerTag, string roomName)
        {
            object raw_gamerTag = gamerTag;
            object raw_roomName = roomName;
            System.Collections.Generic.Dictionary<string, object> serializedFields = new System.Collections.Generic.Dictionary<string, object>();
            serializedFields.Add("gamerTag", raw_gamerTag);
            serializedFields.Add("roomName", raw_roomName);
            return this.Request<Beamable.Common.Utils.Response<bool>>("BackendService", "JoinRoom", serializedFields);
        }
        
        /// <summary>
        /// Call the GetUserRooms method on the BackendService microservice
        /// <see cref="Beamable.Microservices.BackendService.GetUserRooms"/>
        /// </summary>
        public Beamable.Common.Promise<Beamable.Common.Utils.Response<System.Collections.Generic.List<string>>> GetUserRooms(long gamerTag)
        {
            object raw_gamerTag = gamerTag;
            System.Collections.Generic.Dictionary<string, object> serializedFields = new System.Collections.Generic.Dictionary<string, object>();
            serializedFields.Add("gamerTag", raw_gamerTag);
            return this.Request<Beamable.Common.Utils.Response<System.Collections.Generic.List<string>>>("BackendService", "GetUserRooms", serializedFields);
        }
        
        /// <summary>
        /// Call the LeaveRoom method on the BackendService microservice
        /// <see cref="Beamable.Microservices.BackendService.LeaveRoom"/>
        /// </summary>
        public Beamable.Common.Promise<Beamable.Common.Utils.Response<bool>> LeaveRoom(long gamerTag, string roomName)
        {
            object raw_gamerTag = gamerTag;
            object raw_roomName = roomName;
            System.Collections.Generic.Dictionary<string, object> serializedFields = new System.Collections.Generic.Dictionary<string, object>();
            serializedFields.Add("gamerTag", raw_gamerTag);
            serializedFields.Add("roomName", raw_roomName);
            return this.Request<Beamable.Common.Utils.Response<bool>>("BackendService", "LeaveRoom", serializedFields);
        }
        
        /// <summary>
        /// Call the SendMessage method on the BackendService microservice
        /// <see cref="Beamable.Microservices.BackendService.SendMessage"/>
        /// </summary>
        public Beamable.Common.Promise<Beamable.Common.Utils.Response<bool>> SendMessage(long gamerTag, string roomName, string message)
        {
            object raw_gamerTag = gamerTag;
            object raw_roomName = roomName;
            object raw_message = message;
            System.Collections.Generic.Dictionary<string, object> serializedFields = new System.Collections.Generic.Dictionary<string, object>();
            serializedFields.Add("gamerTag", raw_gamerTag);
            serializedFields.Add("roomName", raw_roomName);
            serializedFields.Add("message", raw_message);
            return this.Request<Beamable.Common.Utils.Response<bool>>("BackendService", "SendMessage", serializedFields);
        }
        
        /// <summary>
        /// Call the GetRoomHistory method on the BackendService microservice
        /// <see cref="Beamable.Microservices.BackendService.GetRoomHistory"/>
        /// </summary>
        public Beamable.Common.Promise<Beamable.Common.Utils.Response<System.Collections.Generic.List<Beamable.Common.Models.MessageData>>> GetRoomHistory(string roomName)
        {
            object raw_roomName = roomName;
            System.Collections.Generic.Dictionary<string, object> serializedFields = new System.Collections.Generic.Dictionary<string, object>();
            serializedFields.Add("roomName", raw_roomName);
            return this.Request<Beamable.Common.Utils.Response<System.Collections.Generic.List<Beamable.Common.Models.MessageData>>>("BackendService", "GetRoomHistory", serializedFields);
        }
        
        /// <summary>
        /// Call the EnsureGeneralRoomExists method on the BackendService microservice
        /// <see cref="Beamable.Microservices.BackendService.EnsureGeneralRoomExists"/>
        /// </summary>
        public Beamable.Common.Promise<System.Threading.Tasks.Task> EnsureGeneralRoomExists()
        {
            System.Collections.Generic.Dictionary<string, object> serializedFields = new System.Collections.Generic.Dictionary<string, object>();
            return this.Request<System.Threading.Tasks.Task>("BackendService", "EnsureGeneralRoomExists", serializedFields);
        }
    }
    
    internal sealed class MicroserviceParametersBackendServiceClient
    {
        
        [System.SerializableAttribute()]
        internal sealed class ParameterSystem_Int64 : MicroserviceClientDataWrapper<long>
        {
        }
        
        [System.SerializableAttribute()]
        internal sealed class ParameterSystem_String : MicroserviceClientDataWrapper<string>
        {
        }
    }
    
    [BeamContextSystemAttribute()]
    public static class ExtensionsForBackendServiceClient
    {
        
        [Beamable.Common.Dependencies.RegisterBeamableDependenciesAttribute()]
        public static void RegisterService(Beamable.Common.Dependencies.IDependencyBuilder builder)
        {
            builder.AddScoped<BackendServiceClient>();
        }
        
        public static BackendServiceClient BackendService(this Beamable.Server.MicroserviceClients clients)
        {
            return clients.GetClient<BackendServiceClient>();
        }
    }
}
